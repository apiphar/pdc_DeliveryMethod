import * as angular from 'angular';

// angular-messages is needed by Validation Message component.
// angular-animate is needed by Angular UI Bootstrap.
import * as animate from 'angular-animate';
import * as messages from 'angular-messages';
import * as uib from 'angular-ui-bootstrap';

import * as ngf from 'ng-file-upload';
import * as uis from 'ui-select';
import * as ngSanitize from 'angular-sanitize';

import * as Components from './components';
import * as Services from './services';

let app = angular.module('aspnet', [uib, animate, messages, ngf, uis, ngSanitize]);
app.component('validationMessage', Components.ValidationMessageComponent);

app.component("masterRegionAfi", Components.MasterRegionAfi);
app.service("MasterRegionAfiService", Services.MasterRegionAfiService);
app.component("uiStandarization", Components.uiStandarization);
app.service("BrandService", Services.BrandService);
app.component("polaRangkaianTahapAwal", new Components.PolaRangkaianTahapAwalComponent());
app.service("PolaRangkaianTahapAwalService", Services.PolaRangkaianTahapAwalService);
app.component("polaRangkaianTahapAwalPenerapan", new Components.PolaRangkaianTahapAwalPenerapanComponent());
app.service("PolaRangkaianTahapAwalPenerapanService", Services.PolaRangkaianTahapAwalPenerapanService);
app.component("polaRangkaianTahapAkhir", new Components.PolaRangkaianTahapAkhirComponent());
app.service("PolaRangkaianTahapAkhirService", Services.PolaRangkaianTahapAkhirService);
app.component("polaRangkaianTahapAkhirPenerapan", new Components.PolaRangkaianTahapAkhirPenerapanComponent());
app.service("PolaRangkaianTahapAkhirPenerapanService", Services.PolaRangkaianTahapAkhirPenerapanService);
app.component("generatePolaRangkaianRute", new Components.GeneratePolaRangkaianRuteComponent());
app.service("GeneratePolaRangkaianRuteService", Services.GeneratePolaRangkaianRuteService);
app.component('masterProses', new Components.MasterProsesComponent());
app.service('MasterProsesService', Services.MasterProsesService);
app.filter('masterProsesFilter', Components.masterProsesDataListFilter);
app.component('unitAssign', new Components.UnitAssign());
app.service('UnitAssignService', Services.UnitAssignService);

app.component('unitAssignDetail', new Components.UnitAsssignDetail());
app.service('UnitAssignDetailService', Services.UnitAssignDetailService);
app.service('LeadTimeByService', Services.LeadTimeByService);
app.component('logisticVehicle', new Components.LogisticVehicle());
app.service('LogisticVehicleService', Services.LogisticVehicleService);
app.component('masterRangkaianRute', new Components.masterRangkaianRuteComponent());
app.service('masterRangkaianRuteService', Services.masterRangkaianRuteService);
app.component('maintenanceWaktuBreak', new Components.MaintenanceWaktuBreakComponent());
app.service('MaintenanceWaktuBreakService', Services.MaintenanceWaktuBreakService);
app.component("formARequest", Components.FormARequest);
app.service("FormARequestService", Services.FormARequestService);
app.component('masterLeadTime', new Components.MasterLeadTimeComponent());
app.service('MasterLeadTimeService', Services.MasterLeadTimeService);
app.component('dwellingTime', Components.DwellingTimeComponent);
app.service('DwellingTimeService', Services.DwellingTimeService);
app.component('kodeShift', new Components.KodeShiftComponent());
app.service('KodeShiftService', Services.KodeShiftService);
app.component('vesselArrival', Components.VesselArrivalComponent);
app.service('VesselArrivalService', Services.VesselArrivalService);
app.component('maintenanceShiftKerja', new Components.MaintenanceShiftKerjaComponent());
app.service('MaintenanceShiftKerjaService', Services.MaintenanceShiftKerjaService);
app.component('idleDictionary', new Components.IdleDictionaryComponent());
app.service('IdleDictionaryServices', Services.IdleDictionaryServices);
app.component('workingDictionary', new Components.WorkingDictionaryComponent());
app.service('WorkingDictionaryServices', Services.WorkingDictionaryServices);
app.component('mccp', new Components.MCCPComponent());
app.service('MCCPService', Services.MCCPService);
app.component('configurationPlanning', new Components.ConfigurationPlanningComponent());
app.service('ConfigurationPlanningService', Services.ConfigurationPlanningService);
app.component('defectMaintenance', new Components.DefectMaintenanceComponent);
app.service('DefectMaintenanceService', Services.DefectMaintenanceService);
app.component('inspectionItem', new Components.ItemCheckComponent);
app.service('InspectionItemService', Services.ItemCheckService);
app.component('brand', Components.Brand);
app.service('BrandService', Services.BrandService);
app.component('deliveryRequest', Components.DeliveryRequestComponent);
app.service('DeliveryRequestService', Services.DeliveryRequestService);
app.component('deliveryRequestNormal', Components.DeliveryRequestNormalComponent);
app.component('deliveryRequestSelfPick', Components.DeliveryRequestSelfPickComponent);
app.component('deliveryRequestDirectDelivery', Components.DeliveryRequestDirectDeliveryComponent);
app.component('deliveryRequestTransitToOthers', Components.DeliveryRequestTransitToOthersComponent);
app.component('deliveryRequestTransitToOthersSelfPickToOthers', Components.DeliveryRequestTransitToOthersSelfPickToOthersComponent);
app.component('deliveryRequestTransitToOthersNormal', Components.DeliveryRequestTransitToOthersNormalComponent);
app.component('deliveryRequestTransitToOthersSelfPickFromOthers', Components.DeliveryRequestTransitToOthersSelfPickFromOthersComponent);
app.service('ConfigurationPlanningService', Services.ConfigurationPlanningService);
app.component('afiRequest', new Components.AfiRequest);
app.service('AfiRequestService', Services.AfiRequestService);
app.component('afiHoApproval', new Components.AfiHOApproval);
app.service('AfiHOApprovalService', Services.AfiHOApprovalService);
app.component('exchangeRate', new Components.ExchangeRateComponent());
app.service('ExchangeRateService', Services.ExchangeRateService);
app.component('dccpReadinessVolume', Components.dccpReadinessVolume);
app.component('editDccpVolume', Components.editDccpVolume);
app.service('DccpReadinessVolumeService', Services.DccpReadinessVolumeService);
app.component('masterConfigurationPointPreBookVesselComponent', Components.MasterConfigurationPointPreBookVesselComponent);
app.service('masterConfigurationPointPreBookVesselService', Services.MasterConfigurationPointPreBookVesselService);
app.component('afiDownload', new Components.AfiDownload);
app.service('AfiDownloadService', Services.AfiDownloadService);
app.component('afiReceiveDocument', new Components.AfiReceiveDocument);
app.service('AfiReceiveDocumentService', Services.AfiReceiveDocumentService);
app.component('afiRequestRevisiAndExCancel', new Components.AfiRequestRevisiAndExCancel);
app.service('AfiRequestRevisiAndExCancelService', Services.AfiRequestRevisiAndExCancelService);
app.component('afiRequestRevisiForm', new Components.AfiRequestRevisiForm);
app.component('afiRequestExCancelForm', new Components.AfiRequestExCancelForm);
app.service('AfiRequestRevisiAndExCancelFormService', Services.AfiRequestRevisiAndExCancelFormService);
app.component('afiReturnToOutlet', new Components.AfiReturnToOutlet);
app.service('AfiReturnToOutletService', Services.AfiReturnToOutletService);
app.component('afiReturnToOutletForm', new Components.AfiReturnToOutletForm);
app.component('afiReturnToOutletExCancelForm', new Components.AfiReturnToOutletExCancelForm);
app.component('afiReturnToOutletRevisiForm', new Components.AfiReturnToOutletRevisiForm);
app.component('region', new Components.Region);
app.service('RegionService', Services.RegionService);
app.component('uploadDownload', new Components.UploadDownload);
app.service('UploadDownloadService', Services.UploadDownloadService);
app.component('logUploadDownload', new Components.LogUploadDownload);
app.service('LogUploadDownloadService', Services.LogUploadDownloadService);
app.component('afiRequestUpload', new Components.AfiRequestUpload);
app.service('AfiRequestUploadService', Services.AfiRequestUploadService);
app.component('location', new Components.LocationComponent());
app.service('LocationService', Services.LocationService);
app.component('salesArea', new Components.SalesAreaComponent());
app.service('SalesAreaService', Services.SalesAreaService);
app.component('tariff', new Components.TariffComponent());
app.service('TariffService', Services.TariffService);
app.component('masterRitasePrice', Components.MasterRitasePrice);
app.service('masterRitasePriceService', Services.MasterRitasePriceService);
app.component('vesselDepart', Components.VesselDepartComponent);
app.component('vesselUnitList', Components.VesselUnitListComponent);
app.service('vesselDepartService', Services.VesselDepartService);
app.component('formA', new Components.FormAComponent());
app.service('FormAService', Services.FormAService);
app.component('masterModel', new Components.MasterModelComponent());
app.service('MasterModelService', Services.MasterModelService);
app.component('masterSeries', new Components.MasterModelSeriesComponent());
app.service('MasterModelSeriesService', Services.MasterModelSeriesService);
app.component('engine', new Components.EngineComponent());
app.service('EngineService', Services.EngineService);
app.component('cartype', new Components.CarType());
app.service('CarTypeService', Services.CarTypeService);
app.component('cluster', new Components.Cluster());
app.service('ClusterService', Services.ClusterService);
app.component('dealerMaster', new Components.DealerMasterComponent());
app.service('DealerMasterService', Services.DealerMasterService);
app.component('companyMaster', new Components.CompanyMasterComponent());
app.service('CompanyMasterService', Services.CompanyMasterService);
app.component('maintenanceKonfigurasiExportFileDccp', Components.maintenanceKonfigurasiExportFileDccp);
app.service('MaintenanceKonfigurasiExportFileDccpService', Services.MaintenanceKonfigurasiExportFileDccpService);
app.component('masterPlafond', Components.MasterPlafondComponent);
app.service('MasterPlafondService', Services.MasterPlafondService);
app.component('cbuFinalizePib', Components.cbuFinalizePIB);
app.component('cbuImportFinalizePib', Components.cbuImportFinalizePIB);
app.service('CBUFinalizePIBService', Services.CBUFinalizePIBService);
app.component('deliveryLeg', Components.DeliveryLegComponent);
app.service('DeliveryLegService', Services.DeliveryLegService);
app.component('generateJamBreak', Components.GenerateJamBreakComponent);
app.service('GenerateJamBreakService', Services.GenerateJamBreakService);
app.component('generateShiftKerja', Components.GenerateShiftKerjaComponent);
app.service('GenerateShiftKerjaService', Services.GenerateShiftKerjaService);
app.component('deliveryLegLeadTime', Components.DeliveryLegLeadTimeComponent);
app.service('DeliveryLegLeadTimeService', Services.DeliveryLegLeadTimeService);
app.component('colour', new Components.ColourComponent());
app.service('ColourService', Services.ColourService);
app.component('deliveryUnitAdvanceComponent', Components.deliveryUnitAdvanceComponent);
app.service('DeliveryUnitAdvanceService', Services.DeliveryUnitAdvanceService);
app.component('pdcConfig', new Components.PDCConfigComponent());
app.service('PDCConfigService', Services.PDCConfigService);
app.component('downloadDccpReadinessVolume', Components.DownloadDccpReadinessVolume);
app.service('DownloadDccpReadinessVolumeService', Services.DownloadDccpReadinessVolumeService);
app.component('locationType', Components.LocationType);
app.service('LocationTypeService', Services.LocationTypeService);
app.component('masterLeadTimeLocation', Components.MasterLeadTimeLocation);
app.service('masterLeadTimeLocationService', Services.MasterLeadTimeLocationService);
app.component('logisticVendor', new Components.LogisticVendorComponent());
app.service('LogisticVendorService', Services.LogisticVendorService);
app.component('masterWarnaVehicle', Components.MasterVehicleColor);
app.service('MasterWarnaVehicleService', Services.MasterWarnaVehicleService);
app.component('branch', new Components.Branch());
app.service('BranchService', Services.BranchService);
app.component('manufacturing', new Components.Manufacturing());
app.service('ManufacturingService', Services.ManufacturingService);
app.component('cancelDeliveryRequest', Components.CancelDeliveryRequestComponent);
app.component('cancelDeliveryRequestNormal', Components.CancelDeliveryRequestNormalComponent);
app.component('cancelDeliveryRequestSelfPick', Components.CancelDeliveryRequestSelfPickComponent);
app.component('cancelDeliveryRequestDirectDelivery', Components.CancelDeliveryRequestDirectDeliveryComponent);
app.component('cancelDeliveryRequestTransitToOthers', Components.CancelDeliveryRequestTransitToOthersComponent);
app.component('cancelDeliveryRequestTransitToOthersNormal', Components.CancelDeliveryRequestTransitToOthersNormalComponent);
app.component('cancelDeliveryRequestTransitToOthersSelfPickToOthers', Components.CancelDeliveryRequestTransitToOthersSelfPickToOthersComponent);
app.component('cancelDeliveryRequestTransitToOthersSelfPickFromOthers', Components.CancelDeliveryRequestTransitToOthersSelfPickFromOthersComponent);
app.service('CancelDeliveryRequestService', Services.CancelDeliveryRequestService);
app.component('masterJenis', Components.MasterJenisComponent);
app.service('MasterJenisService', Services.MasterJenisService);
app.service('SalesAreaService', Services.SalesAreaService);
app.component('penyesuaianTanggalProduksi', Components.penyesuaianTanggalProduksi);
app.service('PenyesuaianTanggalProduksiService', Services.PenyesuaianTanggalProduksiService);
app.component('cityLeg', new Components.CityLegComponent());
app.service('CityLegService', Services.CityLegService);
app.component('cityMaster', Components.CityMasterComponent);
app.service('CityMasterService', Services.CityMasterService);
app.component('uploadDccpExcel', Components.UploadDCCPExcel);
app.service('UploadDCCPExcelService', Services.UploadDCCPExcelService);
app.component('konfigurasiGesekan', new Components.KonfigurasiGesekan);
app.service('KonfigurasiGesekanService', Services.KonfigurasiGesekanService);
app.component('gesekNoRangka', new Components.GesekNoRangka);
app.service('GesekNoRangkaService', Services.GesekNoRangkaService);
app.component('serahTerimaGesekan', new Components.SerahTerimaGesekan);
app.service('SerahTerimaGesekanService', Services.SerahTerimaGesekanService);
app.component('reportGesekan', new Components.ReportGesekan);
app.service('ReportGesekanService', Services.ReportGesekanService);
app.component('routingProductionLeadTime', new Components.RoutingProductionLeadTimeComponent());
app.service('RoutingProductionLeadTimeService', Services.RoutingProductionLeadTimeService);
app.component("pioDefaultLeadTimeConfiguration", Components.pioLineStatusConfiguration);
app.service("PIODefaultLeadTimeConfigurationService", Services.PIODefaultLeadTimeConfigurationService);
app.component('pdiLeadTimeConfiguration', Components.PDILeadTimeConfiguration);
app.service('pdiLeadTimeConfigurationService', Services.PDILeadTimeConfigurationService);
app.component('deliveryUnitLoadingComponent', Components.DeliveryUnitLoadingComponent);
app.service('deliveryUnitLoadingService', Services.DeliveryUnitLoadingService);
app.component('deliveryUnitLoadingDetail', Components.DeliveryUnitLoadingDetail);
app.service('deliveryUnitLoadingDetailService', Services.DeliveryUnitLoadingDetailService);
app.component('masterGroupDealer', Components.masterGroupDealer);
app.service('MasterGroupDealerService', Services.MasterGroupDealerService);
app.component('masterCityLocation', Components.masterCityLocation);
app.service('MasterCityLocationService', Services.MasterCityLocationService);
app.component("spuDefaultLeadTimeConfiguration", Components.spuLineStatusConfiguration);
app.service("SPUDefaultLeadTimeConfigurationService", Services.SPUDefaultLeadTimeConfigurationService);
app.component('pioLineMaster', new Components.PIOLineMaster());
app.service('PIOLineMasterService', Services.PIOLineMasterService);
app.component('spuLineMaster', new Components.SPULineMaster());
app.service('SPULineMasterService', Services.SPULineMasterService);
app.component('legPriceMaster', new Components.LegPriceMasterComponent());
app.service('LegPriceMasterService', Services.LegPriceMasterService);
app.component("holiday", Components.Holiday);
app.service("HolidayService", Services.HolidayService);
app.component('masterCompany', Components.MasterCompany);
app.service('MasterCompanyService', Services.MasterCompanyService);
app.component('deliveryShippingScheduleDestinationForm', Components.DeliveryShippingScheduleDestinationForm);
app.component('deliveryShippingScheduleDestinationList', Components.DeliveryShippingScheduleDestinationList);
app.component('deliveryShippingScheduleSourceLocation', Components.DeliveryShippingScheduleSourceLocation);
app.service('DeliveryShippingScheduleService', Services.DeliveryShippingScheduleService);
app.component('afiRestriksiArea', Components.AFIRestriksiArea);
app.component('afiRestriksiAreaDetail', Components.AFIRestriksiAreaDetail);
app.service('AFIRestriksiAreaService', Services.AFIRestriksiAreaService);

app.component('pdcDeliveryMethod', new Components.PDCDeliveryMethod());
app.service('PDCDeliveryMethodService', Services.PDCDeliveryMethodService);